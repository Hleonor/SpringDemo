<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--（一）配置User对象创建-->
    <!--在spring中，<bean>标签用于配置对象创建
        1、id属性用于指定对象的唯一标识
        2、class属性用于指定对象的全限定类名，包括类名和包名
        3、name属性用于指定对象的别名，可以加一些特殊符号
        4、创建对象的时候，默认执行无参构造方法
    -->
    <bean id = "user" class = "ioc.Moc.User"></bean>


    <!--（二）基于xml方式注入属性-->
    <!--
        %%DI:依赖注入，即将对象的依赖关系通过配置文件注入到对象中，是IOC的一种实现方式，
        需要在创建对象的时候，将对象的依赖关系注入到对象中
        %%两种注入方式：
            1、基于有参构造方法注入
            2、基于set方法注入
        1、<property>标签用于配置对象的属性
        2、name属性用于指定属性名称
        3、value属性用于指定属性值
        4、value属性可以省略，直接写属性值
    -->

    <!--使用set方式注入属性-->
    <bean id = "book" class = "ioc.Moc.Book">
        <!--使用property完成属性注入
            name属性用于指定属性名称
            value属性用于指定属性值
        -->
        <property name = "bname" value = "Java"></property>
        <property name = "bauthor" value = "Moc"></property>
        <!--为属性设置空值-->
        <!--<property name = "address">
            <null/>
        </property>-->

        <property name="address">
            <value><![CDATA[<<海南>>]]></value>
        </property>
    </bean>

    <!--使用有参构造方法注入属性-->
    <bean id = "orders" class = "ioc.Moc.Orders">
        <!--使用constructor-arg完成属性注入
            name属性用于指定属性名称
            value属性用于指定属性值
        -->
        <constructor-arg name = "oname" value = "Moc"></constructor-arg>
        <constructor-arg name = "oaddress" value = "China"></constructor-arg>
    </bean>

    <!--使用p命名空间注入属性-->
    <bean id = "student" class = "ioc.Moc.Student" p:sname = "Hleonor" p:sage = "18"></bean>

</beans>